ALMACEN
--create database almacen
--use almacen

create table producto(
	cve_producto int identity(1,1) not null,
	nombre varchar(50),
	existencia int
	constraint [PK_producto] primary key clustered (cve_producto asc)
)

create table orden_entrada(
	folio_ent int identity(1,1) not null,
	fecha_ent date,
	cveprod_e int,
	ctprod_e int
	constraint [PK_orden_entrada] primary key clustered (folio_ent asc)
)

create table orden_salida(
	folio_sal int identity(1,1) not null,
	fecha_sal date,
	cveprod_s int,
	ctprod_s int
	constraint [PK_orden_salida] primary key clustered (folio_sal asc)
)

create table pedido(
	idpedido int identity(1,1) not null,
	fecha_sur date,
	fecha_ped date,
	cve_producto int,
	canti_producto int
	constraint [PK_pedido] primary key clustered (idpedido asc)
)

alter table orden_entrada
add constraint [FK_oe_producto] FOREIGN key (cveprod_e)
references producto(cve_producto)

alter table orden_salida
add constraint [FK_os_producto] FOREIGN key (cveprod_s)
references producto(cve_producto)

alter table pedido
add constraint [FK_p_producto] FOREIGN key (cve_producto)
references producto(cve_producto)
################################################################################
SISTEMA DE VENTAS

--create database sistema_ventas
--use sistema_ventas

create table proveedor(
	RUT_proveedor int identity(1,1) not null,
	nombre varchar(80),
	ap_paterno varchar(80),
	ap_materno varchar(80),
	calle varchar(120),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10),
	pagina_web varchar(50)

	constraint [PK_proveedor] primary key clustered (RUT_proveedor asc)
)

create table prove_producto(
	id_producto int,
	RUT_proveedor int
)

create table producto(
	id_producto int identity(1,1) not null,
	nombre varchar(80),
	precio_actual money,
	stock int,
	nombre_prove varchar(80)

	constraint [PK_producto] primary key clustered (id_producto asc)
)

create table detalle_venta(
	id_venta int,
	id_producto int,
	cantidad int,
	precio_venta money,
	monto_total int
)

create table producto_catego(
	id_producto int,
	id_categoria int
)

create table categoria(
	id_categoria int identity(1,1) not null,
	nombre varchar(80),
	descripcion varchar(100)

	constraint [PK_categoria] primary key clustered (id_categoria asc)
)

create table venta(
	id_venta int identity(1,1) not null,
	fecha date,
	descuento float,
	monto_total money

	constraint [PK_venta] primary key clustered (id_venta asc)
)

create table cliente(
	RUT_cliente int identity(1,1) not null,
	nombre varchar(80),
	ap_paterno varchar(80),
	ap_materno varchar(80),
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80)

	constraint [PK_cliente] primary key clustered (RUT_cliente asc)
)

create table venta_cliente(
	id_venta int,
	RUT_cliente int
)

create table telefono_cliente(
	RUT_cliente int,
	telefono varchar(10)
)
-----------///////////////-----------------------------------------------
alter table prove_producto
add constraint [FK_id_producto_pp] FOREIGN key (id_producto)
references producto(id_producto)

alter table prove_producto
add constraint [FK_RUT_proveedor_pp] FOREIGN key (RUT_proveedor)
references proveedor(RUT_proveedor)
-------------------------------------------------------------------
alter table detalle_venta
add constraint [FK_id_producto_dv] FOREIGN key (id_producto)
references producto(id_producto)

alter table detalle_venta
add constraint [FK_id_venta_dv] FOREIGN key (id_venta)
references venta(id_venta)
-----------------------------------------------------------------------
alter table producto_catego
add constraint [FK_id_prod_pc] FOREIGN key (id_producto)
references producto(id_producto)

alter table producto_catego
add constraint [FK_id_cate_pc] FOREIGN key (id_categoria)
references categoria(id_categoria)
------------------------------------------------------------------------
alter table venta_cliente
add constraint [FK_id_venta_vc] FOREIGN key (id_venta)
references venta(id_venta)

alter table venta_cliente
add constraint [FK_RUT_cliente_vc] FOREIGN key (RUT_cliente)
references cliente(RUT_cliente)
-------------------------------------------------------------------------
alter table telefono_cliente
add constraint [FK_RUT_cliente_tc] FOREIGN key (RUT_cliente)
references cliente(RUT_cliente)

####################################################################
ZOOLOGICO

--create database zoologico
--use zoologico

create table animal(
	id_animal int identity(1,1) not null,
	sexo varchar(10),
	nacimiento date,
	pais_ori varchar(80),
	continente varchar(50),
	especie varchar(80)

	constraint [PK_animal] primary key clustered (id_animal asc)
)

create table animal_esp(
	id_animal int,
	id_especie int
)

create table especie(
	id_especie int identity(1,1) not null,
	nombre_vul varchar(80),
	nombre_cien varchar(80),
	familia varchar(80),
	peligro_ext varchar(2)

	constraint [PK_especie] primary key clustered (id_especie asc)
)

create table zoologico(
	id_zoo int identity(1,1) not null,
	nombre varchar(80),
	ciudad varchar(80),
	pais varchar(80),
	tamanio varchar(20),
	presupuesto money

	constraint [PK_zoo] primary key clustered (id_zoo asc)
)

create table zoo_animal(
	id_zoo int,
	id_animal int
)
------------------------//////////////////////-----------------------
alter table animal_esp
add constraint [FK_id_animal_ae] FOREIGN key (id_animal)
references animal(id_animal)

alter table animal_esp
add constraint [FK_id_especie_ae] FOREIGN key (id_especie)
references especie(id_especie)
---------------------------------------------------------------------
alter table zoo_animal
add constraint [FK_id_animal_za] FOREIGN key (id_animal)
references animal(id_animal)

alter table zoo_animal
add constraint [FK_id_zoo_za] FOREIGN key (id_zoo)
references zoologico(id_zoo)
######################################################################################################
Bufete de abogados

--create database bufete_abogados
--use bufete_abogados

create table cliente (
	DNI_cliente int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(30),
	segundo_ap varchar(30),
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10)

	constraint [PK_cliente] primary key clustered (DNI_cliente asc)
)

create table asunto_cli(
	no_expe int,
	DNI_cliente int
)

create table asunto(
	no_expe int identity(1,1) not null,
	fecha_ini date,
	fecha_fin date,
	estado varchar(50)

	constraint [PK_asunto] primary key clustered (no_expe asc)
)

create table asunto_procu(
	no_expe int,
	DNI_procurador int
)

create table procurador(
	DNI_procurador int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(30),
	segundo_ap varchar(30),
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10)

	constraint [PK_procurador] primary key clustered (DNI_procurador asc)
)

-------------------------////////////////////---------------------------------
alter table asunto_cli
add constraint [FK_DNI_cliente_ac] FOREIGN key (DNI_cliente)
references cliente(DNI_cliente)

alter table asunto_cli
add constraint [FK_no_expediente_ac] FOREIGN key (no_expe)
references asunto(no_expe)
---------------------------------------------------------------------
alter table asunto_procu
add constraint [FK_no_expediente_ap] FOREIGN key (no_expe)
references asunto(no_expe)

alter table asunto_procu
add constraint [FK_DNI_procurador_ap] FOREIGN key (DNI_procurador)
references procurador(DNI_procurador)
##########################################################################################
ARTICULOS Y ENCARGOS

--create database articulos_encargos
--use articulos_encargos

create table cliente(
	RUT_cliente int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(60),
	segundo_ap varchar(60),
	saldo money,
	credito_limite money,
	descuento money,

	constraint [PK_cliente] primary key clustered (RUT_cliente asc)
)

create table domi_cliente(
	RUT_cliente int,
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10)
)

create table pedido_cliente(
	id_pedido int,
	RUT_cliente int
)

create table pedido(
	id_pedido int identity(1,1) not null,
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	fecha date,
	hora time

	constraint [PK_pedido] primary key clustered (id_pedido asc)
)

create table pedido_art(
	no_art int,
	id_pedido int,
	cantidad int
)

create table articulo(
	no_art int identity(1,1) not null,
	descripcion varchar(80)

	constraint [PK_articulo] primary key clustered (no_art asc)
)

create table articulo_fabri(
	no_art int,
	no_fab int,
	existencia int
)

create table fabrica(
	no_fab int identity(1,1) not null,
	descripcion varchar(80)

	constraint [PK_fabrica] primary key clustered (no_fab asc)
)

create table distri_fab(
	id_distri int,
	no_fab int
)

create table distribuidor(
	id_distri int identity(1,1) not null,
	tele_contacto varchar(10)

	constraint [PK_distribuidor] primary key clustered (id_distri asc)
)
------------------------////////////////////////-----------------------------------
alter table domi_cliente
add constraint [FK_RUT_cliente_dc] FOREIGN key (RUT_cliente)
references cliente(RUT_cliente)
-----------------------------------------------------------------------------------
alter table pedido_cliente
add constraint [FK_RUT_cliente_pc] FOREIGN key (RUT_cliente)
references cliente(RUT_cliente)

alter table pedido_cliente
add constraint [FK_id_pedido_pc] FOREIGN key (id_pedido)
references pedido(id_pedido)
---------------------------------------------------------------------
alter table pedido_art
add constraint [FK_id_pedido_pa] FOREIGN key (id_pedido)
references pedido(id_pedido)

alter table pedido_art
add constraint [FK_no_art_pa] FOREIGN key (no_art)
references articulo(no_art)
----------------------------------------------------------------------
alter table articulo_fabri
add constraint [FK_no_art_af] FOREIGN key (no_art)
references articulo(no_art)

alter table articulo_fabri
add constraint [FK_no_fab_af] FOREIGN key (no_fab)
references fabrica(no_fab)
--------------------------------------------------------------------------
alter table distri_fab
add constraint [FK_no_fab_df] FOREIGN key (no_fab)
references fabrica(no_fab)

alter table distri_fab
add constraint [FK_id_dis_df] FOREIGN key (id_distri)
references distribuidor(id_distri)
##########################################################################################
CLUB NAUTICO

--create database club_nautico
--use club_nautico

create table socio(
	id_socio int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(60),
	segundo_ap varchar(60),
	calle varchar(80),
	no_ext int,
	no_int varchar(5),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10),
	correo varchar(80)

	constraint [PK_socio] primary key clustered (id_socio asc)
)

create table socio_barco(
	matricula varchar(60),
	id_socio int
)

create table barco(
	matricula varchar(60) not null,
	amarre int,
	nombre varchar(80),
	cuota money

	constraint [PK_barco] primary key clustered (matricula asc)

)

create table salida(
	id_salida int identity(1,1) not null,
	matricula varchar(60),
	fecha_salida date,
	hora_salida time,
	destino varchar(80)

	constraint [PK_salida] primary key clustered (id_salida asc)
)

create table barco_patron(
	matricula varchar(60),
	id_patron int
)

create table patron(
	id_patron int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(60),
	segundo_ap varchar(60),
	calle varchar(80),
	no_ext int,
	no_int varchar(10),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10),
	correo varchar(60)

	constraint [PK_patron] primary key clustered (id_patron asc)
)
-------------------------//////////////////////--------------------------
alter table socio_barco
add constraint [FK_id_socio_sb] FOREIGN key (id_socio)
references socio(id_socio)

alter table socio_barco
add constraint [FK_matricula_sb] FOREIGN key (matricula)
references barco(matricula)
--------------------------------------------------------------------------
alter table salida
add constraint [FK_matricula_s] FOREIGN key (matricula)
references barco(matricula)
--------------------------------------------------------------------------
alter table barco_patron
add constraint [FK_matricula_bp] FOREIGN key (matricula)
references barco(matricula)

alter table barco_patron
add constraint [FK_id_patron_bp] FOREIGN key (id_patron)
references patron(id_patron)
############################################################################################
VIDEOCLUB

--create database videoclub
--use videoclub

create table prestamo(
	id_prestamo int identity(1,1) not null,
	codigo_socio int,
	fecha date

	constraint [PK_prestamo] primary key clustered (id_prestamo asc)
)

create table prestamo_pelicula(
	id_prestamo int,
	id_pelicula int,
	no_cinta int
)

create table pelicula(
	id_pelicula int identity(1,1) not null,
	titulo varchar(80),
	genero varchar(80),
	nombre varchar(80),
	director varchar(80)

	constraint [PK_pelicula] primary key clustered (id_pelicula asc)
)

create table pelicula_cinta(
	id_pelicula int,
	no_cinta int
)

create table pelicula_actor(
	id_pelicula int,
	nombre_actor varchar(80),
	primer_ap varchar(80),
	segundo_ap varchar(80)
)

create table devolucion(
	id_devolucion int identity(1,1) not null,
	fecha_dev date,
	no_cinta int

	constraint [PK_devolucion] primary key clustered (id_devolucion asc)
)

create table devolucion_socio(
	id_devolucion int,
	codigo_socio int
)

create table socio(
	codigo_socio int identity(1,1) not null,
	nombre varchar(80),
	primer_ap varchar(60),
	segundo_ap varchar(60),
	calle varchar(80),
	no_ext int,
	no_int varchar(10),
	colonia varchar(80),
	ciudad varchar(80),
	telefono varchar(10)

	constraint [PK_socio] primary key clustered (codigo_socio asc)
)

create table socio_actor(
	codigo_socio int,
	director varchar(80),
	genero varchar(60),
	actor varchar(60)
)

create table lista_socio(
	id_lista int,
	codigo_socio int
)

create table lista(
	id_lista int identity(1,1) not null,
	nombre_peli varchar(80)

	constraint [PK_lista] primary key clustered (id_lista asc)
)
---------------------------------////////////////////////-------------------------------
alter table prestamo
add constraint [FK_codigo_socio_p] FOREIGN key (codigo_socio)
references socio(codigo_socio)
----------------------------------------------------------------------------------
alter table prestamo_pelicula
add constraint [FK_id_prestamo_pp] FOREIGN key (id_prestamo)
references prestamo(id_prestamo)

alter table prestamo_pelicula
add constraint [FK_id_pelicula_pp] FOREIGN key (id_pelicula)
references pelicula(id_pelicula)
----------------------------------------------------------------------------
alter table pelicula_cinta
add constraint [FK_id_pelicula_pc] FOREIGN key (id_pelicula)
references pelicula(id_pelicula)
--------------------------------------------------------------------------
alter table pelicula_actor
add constraint [FK_id_pelicula_pa] FOREIGN key (id_pelicula)
references pelicula(id_pelicula)
----------------------------------------------------------------------------
alter table devolucion_socio
add constraint [FK_id_devolucion_ds] FOREIGN key (id_devolucion)
references devolucion(id_devolucion)

alter table devolucion_socio
add constraint [FK_codigo_socio_ds] FOREIGN key (codigo_socio)
references socio(codigo_socio)
------------------------------------------------------------------------------------
alter table socio_actor
add constraint [FK_codigo_socio_sa] FOREIGN key (codigo_socio)
references socio(codigo_socio)
----------------------------------------------------------------------------------
alter table lista_socio
add constraint [FK_id_lista_ls] FOREIGN key (id_lista)
references lista(id_lista)

alter table lista_socio
add constraint [FK_codigo_socio_ls] FOREIGN key (codigo_socio)
references socio(codigo_socio)



insert into animal(sexo, nacimiento, pais_ori, continente) values('M', '2003', 'Magui', 'africa') 
insert into animal(sexo, nacimiento, pais_ori, continente) values('M', '2012', 'mexico', 'america')
insert into animal(sexo, nacimiento, pais_ori, continente) values('H', '2019', 'españa', 'europa') 
insert into animal(sexo, nacimiento, pais_ori, continente) values('M', '2003', 'Magui', 'africa')
insert into animal(sexo, nacimiento, pais_ori, continente) values('M', '2020', 'eua', 'africa')
insert into animal(sexo, nacimiento, pais_ori, continente) values('H', '2022', 'dubai', 'asia')

insert into animal_esp(id_animal, id_especie) values(1,1)
insert into animal_esp(id_animal, id_especie) values(2,2)
insert into animal_esp(id_animal, id_especie) values(3,4)
insert into animal_esp(id_animal, id_especie) values(4,6)
insert into animal_esp(id_animal, id_especie) values(5,3)
insert into animal_esp(id_animal, id_especie) values(6,5)

insert into zoo_animal(id_zoo, id_animal) values(1,1)
insert into zoo_animal(id_zoo, id_animal) values(1,2)
insert into zoo_animal(id_zoo, id_animal) values(2,2)
insert into zoo_animal(id_zoo, id_animal) values(3,3)
insert into zoo_animal(id_zoo, id_animal) values(4,4)
insert into zoo_animal(id_zoo, id_animal) values(5,5)

select * from zoologico
select * from animal
select * from especie
select * from animal_esp
select * from zoo_animal

select * from zoologico where pais = 'mexico' 
------2
select e.* from especie e
join animal_esp ae on ae.id_especie= e.id_especie
join zoo_animal za on za.id_animal = ae.id_animal
join zoologico z on z.id_zoo = za.id_zoo
where z.nombre like '%zoologico de colima%'
-----3
select nombre_vul, nombre_cien from especie where familia like 'felino%'
------4
select * from animal a
join animal_esp ae on ae.id_animal = a.id_animal
join especie e on e.id_especie = ae.id_especie
where year(a.nacimiento)= 2022
--------------------5
select * from animal a
join animal_esp ae on ae.id_animal = a.id_animal
join especie e on e.id_especie = ae.id_especie
where year(getdate()) - year(a.nacimiento) >4
------------6
select z.nombre from animal a
join animal_esp ae on ae.id_animal = a.id_animal
join especie e on e.id_especie = ae.id_especie
join zoo_animal za on za.id_animal = a.id_animal
join zoologico z on z.id_zoo = za.id_zoo
where a.continente like '%america%'
and z.nombre like '%chapultepec%'
------------------7
select * from zoologico where pais like '%m_xico%'
--------------------------------------------------8
select z.nombre, z.ciudad, z.pais from zoologico z
join zoo_animal za on za.id_zoo= z.id_zoo
group by z.nombre, z.ciudad, z.pais
having count(za.id_animal) >0
----------------------9
select e.nombre_vul, e.nombre_cien, e.familia from especie e
join animal_esp ae on ae.id_especie = e.id_especie
join zoo_animal za on za.id_animal = ae.id_animal
join zoologico z on z.id_zoo = za.id_zoo
where e.peligro_ext = 'si'
and z.nombre like 'zoologico de chapultepec'
---------------------------------------10
select a.id_animal, e.nombre_vul, a.nacimiento, a.pais_ori from animal a
join animal_esp ae on ae.id_animal = a.id_animal
join especie e on e.id_especie= ae.id_especie
where e.peligro_ext ='no'





insert into asunto(fecha_ini, fecha_fin, estado) values('20/05/2010', '03/11/2012', 'terminado')
insert into asunto(fecha_ini, fecha_fin, estado) values('12/12/2012', '22/02/2015', 'terminado')
insert into asunto(fecha_ini, fecha_fin, estado) values('01/01/2001','', 'en proceso')
insert into asunto(fecha_ini, fecha_fin, estado) values('02/02/2002','', 'en proceso')
insert into asunto(fecha_ini, fecha_fin, estado) values('11/05/2019','', 'detenido')
insert into asunto(fecha_ini, fecha_fin, estado) values('30/12/2021','', 'detenido')

insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('juan', 'vazquez', 'vergara', 'burocratas#200', 100, '125-A', 'palmares', 'colima', '31244444')
insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('felipe', 'vazquez', 'lopez', 'burocratas#150', 150, '125-B', 'palmares', 'colima', '312 333 33 44')
insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Rogelio', 'contreras', 'zuñiga', 'capaleta', 90, '308-A', 'palmares', 'colima', '312 333 33 44')
insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Ramon', 'Ruelas', 'Simio', 'san jose', 800, '800-B', 'palmares', 'colima', '312 333 33 44')
insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Julio', 'vazquez', 'Sarcos', 'miguel hidalgo', 900, '125-A', 'palmares', 'colima', '312 333 33 44')
insert into cliente(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('julian', 'voguer', 'bautista', 'san felipe', 250, '10-A', 'palmares', 'colima', '312 333 33 44')

insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Pjuan', 'vazquez', 'vergara', 'burocratas#200', 100, '125-A', 'palmares', 'colima', '312 333 33 44')
insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Pfelipe', 'vazquez', 'lopez', 'burocratas#150', 150, '125-B', 'palmares', 'colima', '312 333 33 44')
insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('PRogelio', 'contreras', 'zuñiga', 'capaleta', 90, '308-A', 'palmares', 'colima', '312 333 33 44')
insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('PRamon', 'Ruelas', 'Simio', 'san jose', 800, '800-B', 'palmares', 'colima', '312 333 33 44')
insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('PJulio', 'vazquez', 'Sarcos', 'miguel hidalgo', 900, '125-A', 'palmares', 'colima', '312 333 33 44')
insert into procurador(nombre, primer_ap, segundo_ap, calle, no_ext, no_int, colonia, ciudad, telefono) values('Pjulian', 'voguer', 'bautista', 'san felipe', 250, '10-A', 'palmares', 'colima', '312 333 33 44')

select * from cliente







create database ordenes
use ordenes

create table orden(
	id_orden int identity(1,1) not null,
	fecha date,
	id_cliente int

	constraint [PK_orden] primary key clustered (id_orden asc)
)

create table cliente(
	id_cliente int identity(1,1) not null,
	nombre varchar(50),
	estado varchar(5),
	telefono varchar(10)

	constraint [PK_cliente] primary key clustered (id_cliente asc)
)

create table articulo(
	no_articulo int identity(1,1) not null,
	nombre varchar(50),
	precio money

	constraint [PK_articulo] primary key clustered (no_articulo asc)
)

create table articulos_orden(
	id_orden int,
	no_articulo int,
	cantidad int
)

alter table orden
add constraint [FK_o_cliente] FOREIGN key (id_cliente)
references cliente(id_cliente)

alter table articulos_orden
add constraint [FK_ao_orden] FOREIGN key (id_orden)
references orden(id_orden)

alter table articulos_orden
add constraint [FK_ao_articulo] FOREIGN key (no_articulo)
references articulo(no_articulo)